"use strict";(self.webpackChunkblack_dragon=self.webpackChunkblack_dragon||[]).push([[807],{74:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-73a26046",path:"/tool/shell/Shell.html",title:"Shell",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"tool/shell/Shell.md",git:{updatedTime:1668501648e3,contributors:[{name:"huluqaqxq",email:"74292567+huluqaqxq@users.noreply.github.com",commits:1}]}}},2043:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});const e=(0,a(6252).uE)('<h1 id="shell"><a class="header-anchor" href="#shell">#</a> Shell</h1><p>Shell精简教程</p><p><strong>1.1终端打印</strong></p><p>echo命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> WelCome to Bash\nWelCome to Bash\n<span class="token comment"># echo -e 包含转义字符的字符串</span>\n<span class="token comment"># 设置颜色 经常使用的颜色码 重置=0， 黑色=30，红色=31，绿色=32， 黄色=33，</span>\n<span class="token comment"># 蓝色=34，洋红=35，青蛇=36，白色=37</span>\n\t<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;\\e[1;31m this is red text \\e[0m&#39;</span>\n<span class="token comment"># 变量赋值</span>\n\t<span class="token comment">#!/bin/bash</span>\n\t<span class="token assign-left variable">fruit</span><span class="token operator">=</span>apple\n\t<span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">5</span>\n\t<span class="token builtin class-name">echo</span> <span class="token string">&quot;We have <span class="token variable">$count</span> <span class="token variable">$fruit</span>(s)&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>printf命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 格式化输出</span>\n\t<span class="token builtin class-name">printf</span> <span class="token string">&#39;%-5s %-10s %4s\\n&#39;</span> NO Name Mark \n\t\tNO    Name       Mark\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>cat命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 查看运行的端口</span>\n\tpgrep <span class="token function">docker</span> \n\t<span class="token number">11767</span>\n\t<span class="token number">32403</span>\n<span class="token comment"># 查看对应进程的环境变量</span>\n\t<span class="token function">cat</span> /proc/11767/environ <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">&#39;\\0&#39;</span> <span class="token string">&#39;\\n&#39;</span>\n\t<span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>en_US.UTF-8\n\t<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin\n\t<span class="token assign-left variable">NOTIFY_SOCKET</span><span class="token operator">=</span>/run/systemd/notify\n\t<span class="token assign-left variable">LISTEN_PID</span><span class="token operator">=</span><span class="token number">11767</span>\n\t<span class="token assign-left variable">LISTEN_FDS</span><span class="token operator">=</span><span class="token number">1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>1.2Shell进行数学运算</strong></p><p>let命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>\n<span class="token assign-left variable">no1</span><span class="token operator">=</span><span class="token number">4</span>\n<span class="token assign-left variable">no2</span><span class="token operator">=</span><span class="token number">5</span>\n<span class="token builtin class-name">let</span> <span class="token assign-left variable">result</span><span class="token operator">=</span>no1+no2\n<span class="token builtin class-name">echo</span> <span class="token variable">$result</span>\n<span class="token comment"># 自加 / 自减</span>\n<span class="token builtin class-name">let</span> result++\n<span class="token builtin class-name">let</span> reuslt--\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>其他方法</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">result</span><span class="token operator">=</span>$<span class="token punctuation">[</span>no1 + no2<span class="token punctuation">]</span>\n<span class="token comment"># 或者使用</span>\n<span class="token assign-left variable">reslut</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>no1 <span class="token operator">+</span> no2<span class="token variable">))</span></span>\n\n<span class="token assign-left variable">result</span><span class="token operator">=</span><span class="token string">&#39;expr 3+4&#39;</span>\n<span class="token assign-left variable">result</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">expr</span> no1 + <span class="token number">5</span><span class="token variable">)</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>以上只支持整数</p><p>bc可以执行浮点数运算并运用一些高级函数</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;4 * 0.56&quot;</span> <span class="token operator">|</span> <span class="token function">bc</span>\n<span class="token comment"># 设置计算到小数点后两位</span>\n\t<span class="token builtin class-name">echo</span> <span class="token string">&quot;scale=2; 3/8&quot;</span> <span class="token operator">|</span> <span class="token function">bc</span>\n<span class="token comment"># 进制转换</span>\n\t<span class="token comment">#!/bin/bash</span>\n\t<span class="token assign-left variable">no</span><span class="token operator">=</span><span class="token number">100</span>\n\t<span class="token builtin class-name">echo</span> <span class="token string">&quot;obase=2; <span class="token variable">$no</span>&quot;</span> <span class="token operator">|</span> <span class="token function">bc</span>\n\t<span class="token assign-left variable">no</span><span class="token operator">=</span> <span class="token number">1100100</span>\n\t<span class="token builtin class-name">echo</span> <span class="token string">&quot;obase=10; ibase=2; <span class="token variable">$no</span>&quot;</span> <span class="token operator">|</span> <span class="token function">bc</span>\n\t<span class="token comment"># 计算平方根</span>\n\t<span class="token builtin class-name">echo</span> <span class="token string">&quot;sqrt(100)&quot;</span> <span class="token operator">|</span> <span class="token function">bc</span>\n\t<span class="token builtin class-name">echo</span> <span class="token string">&quot;10^10&quot;</span> <span class="token operator">|</span> <span class="token function">bc</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>1.3文件描述符和重定向</strong></p><ul><li>标准输入—（stdin）</li><li>标准输出— (stdout）</li><li>标准错误 — (stderr)</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 将输出的文本存储到temp.txt中，原temp.txt内容会被清空</span>\n\t<span class="token builtin class-name">echo</span> <span class="token string">&quot;This is a sample text&quot;</span> <span class="token operator">&gt;</span> temp.txt\n<span class="token comment"># 将文本追加到temp.txt</span>\n\t<span class="token builtin class-name">echo</span> <span class="token string">&quot;This is a samole text&quot;</span> <span class="token operator">&gt;&gt;</span> temp.txt\n<span class="token comment"># 向一个文件写入头部数据</span>\n\t<span class="token comment">#!/bin/bash</span>\n\t<span class="token function">cat</span> <span class="token operator">&lt;&lt;</span>EOF<span class="token operator">&gt;</span>log.txt\n\tLOG FILE HEADER\n\tThis is a <span class="token builtin class-name">test</span> log <span class="token function">file</span>\n\tFunction: System statistios\n\tEOF\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>1.4获取终端信息</strong></p><p>tput和stty终端处理工具</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 获取当前终端行数和列数</span>\n\ttput cols\n\ttput lines\n<span class="token comment"># 获取当前终端名</span>\n\ttput longname\n<span class="token comment"># -echo禁止将输出发送到终端，</span>\n\t<span class="token comment">#!/bin/bash</span>\n\t<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;Enter password: &quot;</span>\n\tstty <span class="token parameter variable">-echo</span>\n\t<span class="token builtin class-name">read</span> password\n\tstty <span class="token builtin class-name">echo</span>\n\t<span class="token builtin class-name">echo</span>\n\t<span class="token builtin class-name">echo</span> Password read.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><strong>1.5获取日期</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 打印纪元时</span>\n\t<span class="token function">date</span>\n<span class="token comment"># 打印总秒数</span>\n\t<span class="token function">date</span> + %s\n<span class="token comment"># 按照对应格式打印日期</span>\n\t<span class="token function">date</span> <span class="token string">&quot;+%d %B %Y&quot;</span>\n<span class="token comment"># 列 计算脚本所花的时间</span>\n<span class="token comment">#!/bin/bash</span>\n<span class="token assign-left variable">start</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%s<span class="token variable">)</span></span>\ncommands<span class="token punctuation">;</span>\nstatements<span class="token punctuation">;</span>\n<span class="token assign-left variable">end</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%s<span class="token variable">)</span></span>\n<span class="token assign-left variable">difference</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>end <span class="token parameter variable">-start</span><span class="token variable">)</span></span>\n<span class="token builtin class-name">echo</span> Time taken execute commands iss <span class="token variable">$difference</span> seconds.\ndsad\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><img src="Shell%200e1a0c0f871c4cd39a449d2705b5e063/Untitled.png" alt="Untitled"></p><p><strong>1.6调试脚本</strong></p><ul><li>-x :在执行时显示参数和命令</li><li>+x: 禁止调试</li><li>-v:当命令进行读取时显示输入</li><li>+v:禁止打印输入</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sh</span> <span class="token parameter variable">-x</span> name.sh\n<span class="token comment"># 补充read命令</span>\n<span class="token comment"># 显示提示信息</span>\n<span class="token comment"># -t指定多少秒内输入 -d 结束输入行</span>\n\t<span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;Enter input:&quot;</span> var\n\t<span class="token builtin class-name">read</span> <span class="token parameter variable">-t</span> <span class="token number">2</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;Enter input:&quot;</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;:&quot;</span> var\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>1.7分隔符和迭代器</strong></p><p>内部字段分隔符(Internal Field Separator，IFS)</p><p>IFS是存储定界符的环境变量。它是当前shell环境使用的默认定界字符串</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>\n<span class="token assign-left variable">data</span><span class="token operator">=</span><span class="token string">&quot;name,sex,rollno,location&quot;</span>\n<span class="token assign-left variable">oldIFS</span><span class="token operator">=</span><span class="token environment constant">$IFS</span>\n<span class="token assign-left variable"><span class="token environment constant">IFS</span></span><span class="token operator">=</span>,\n<span class="token keyword">for</span> <span class="token for-or-select variable">item</span> <span class="token keyword">in</span> <span class="token variable">$data</span><span class="token punctuation">;</span>\n<span class="token keyword">do</span>\n<span class="token builtin class-name">echo</span> Item: <span class="token variable">$item</span>\n<span class="token keyword">done</span>\n<span class="token assign-left variable"><span class="token environment constant">IFS</span></span><span class="token operator">=</span><span class="token variable">$oldIFS</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>算数比较对照表</p><table><thead><tr><th>code</th><th>mean</th></tr></thead><tbody><tr><td>-gt</td><td>大于</td></tr><tr><td>-lt</td><td>小于</td></tr><tr><td>-ge</td><td>大于或等于</td></tr><tr><td>-le</td><td>小于或等于</td></tr><tr><td></td><td></td></tr></tbody></table><p>文件系统相关</p><table><thead><tr><th>code</th><th>mean</th></tr></thead><tbody><tr><td>[-f $file_var]</td><td>如果给定的变量包含正常点的文件路劲或文件名则返回真</td></tr><tr><td>[-x $var]</td><td>如果给定的变量包含的文件可执行，则返回真</td></tr><tr><td>[-d $var]</td><td>如果给定的变量包含的是目录，则返回真</td></tr><tr><td>[-e $var]</td><td>如果给定的变量包含的文件存在，则返回真</td></tr><tr><td>[-c $var]</td><td>如果给定的变量包含的是一个字符设备文件的路径，则返回真</td></tr><tr><td>[-b $var]</td><td>如果给定的变量包含的是一个块设备文件的路径，则返回真</td></tr><tr><td>[-w $var]</td><td>如果给定的变量包含的文件可写，则返回真</td></tr><tr><td>[-r $var]</td><td>如果给定的变量包含的文件可读，则返回真</td></tr><tr><td>[-L $var]</td><td>如果给定的变量包含的是一个符号链接，则返回真</td></tr></tbody></table><p>字符串比较</p><table><thead><tr><th>code</th><th>mean</th></tr></thead><tbody><tr><td>[[ $str1 = $str2 ]]</td><td>字符串比较</td></tr><tr><td>[[ $str1 == $str2 ]]</td><td>另一种写</td></tr><tr><td>[[ $str1 != $str2 ]]</td><td>不等于</td></tr><tr><td>[[ $str1 &gt; $str2 ]]</td><td>如果str1的字母序比str2大，则返回真</td></tr><tr><td>[[ $str1 &lt; $str2 ]]</td><td>如果str1的字母序比str2小，则返回真</td></tr><tr><td>[[ -z $str1 ]]</td><td>如果str1是空字符，则返回真</td></tr><tr><td>[[ -n $str1 ]]</td><td>如果str1是非空字符串，则返回真</td></tr></tbody></table><p><strong>2.1命令之乐</strong></p><p>cat命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 压缩连续的空白行</span>\n\t<span class="token function">cat</span> <span class="token parameter variable">-s</span> filename\n<span class="token comment"># 用tr移除空白行</span>\n\t<span class="token function">cat</span> filename <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-s</span> <span class="token string">&#39;\\n&#39;</span>\n<span class="token comment"># 显示行号</span>\n\t<span class="token function">cat</span> <span class="token parameter variable">-n</span> filename\n<span class="token comment"># 逆序输出</span>\n\t<span class="token function">tac</span> <span class="token parameter variable">-n</span> filename\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>2.2录制与回放终端会话</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 打开两个终端</span>\n<span class="token comment"># terminal1</span>\n\t<span class="token function">mkfifo</span> scriptfifo\n<span class="token comment"># teminal2</span>\n\t<span class="token function">cat</span> scriptfifo\n<span class="token comment"># 退出会话 exit</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>2.3文件的查找与文件列表</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 当前目录下的所有.sh文件</span>\n\t<span class="token function">find</span> /root <span class="token parameter variable">-name</span> <span class="token string">&quot;*.sh&quot;</span> <span class="token parameter variable">-print</span>\n<span class="token comment"># 忽略大小写</span>\n\t<span class="token function">find</span> /root <span class="token parameter variable">-iname</span> <span class="token string">&quot;zkcli.sh&quot;</span> <span class="token parameter variable">-print</span>\n<span class="token comment"># 匹配多个条件的中的一个</span>\n\t<span class="token function">find</span> /root <span class="token punctuation">\\</span><span class="token punctuation">(</span> <span class="token parameter variable">-name</span> <span class="token string">&quot;*.sh&quot;</span> <span class="token parameter variable">-o</span>  <span class="token parameter variable">-name</span> <span class="token string">&quot;*.txt&quot;</span> <span class="token punctuation">\\</span><span class="token punctuation">)</span> <span class="token parameter variable">-print</span>\n<span class="token comment"># 不包含 否定参数 |</span>\n\t<span class="token function">find</span> /root <span class="token operator">|</span> <span class="token parameter variable">-name</span> <span class="token string">&quot;*.sh&quot;</span> <span class="token parameter variable">-print</span>\n\n<span class="token comment"># 基于目录深度搜索</span>\n<span class="token comment"># -maxdepth和 -mindepth</span>\n\t<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-maxdepth</span> <span class="token number">1</span> <span class="token parameter variable">-name</span>  <span class="token string">&quot;*.sh&quot;</span> <span class="token parameter variable">-print</span>\n<span class="token comment"># 至少两个子目录以下的文件</span>\n\t<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-mindepth</span> <span class="token number">2</span> <span class="token parameter variable">-name</span> <span class="token string">&quot;*.sh&quot;</span> <span class="token parameter variable">-print</span>\n<span class="token comment"># 根据文件时间进行搜索</span>\n<span class="token comment"># 单位天</span>\n<span class="token comment"># -atime 用户最近一次访问文件的时间</span>\n<span class="token comment"># -mtime 文件内容最后一次被修改的时间</span>\n<span class="token comment"># -ctime 文件元数据最后一次改变的时间</span>\n\t<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-atime</span> <span class="token parameter variable">-7</span> <span class="token parameter variable">-print</span>\n<span class="token comment"># 单位分钟</span>\n<span class="token comment"># -amin 访问时间 </span>\n<span class="token comment"># -mmin 修改时间</span>\n<span class="token comment"># -cmin 变化时间</span>\n<span class="token comment"># 打印访问时间超过七分钟的所有文件</span>\n\t<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-amin</span> +7 <span class="token parameter variable">-print</span>\n<span class="token comment"># 基于文件大小搜索</span>\n<span class="token comment"># 文件大小单元</span>\n<span class="token comment"># b -- 块（512字节）</span>\n<span class="token comment"># c -- 字节</span>\n<span class="token comment"># w -- 字(2字节)</span>\n<span class="token comment"># k -- 千字节</span>\n<span class="token comment"># M -- 兆字节</span>\n<span class="token comment"># G -- G字节</span>\n\t<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-size</span> +2k\n<span class="token comment"># 删除匹配的文件 -delete</span>\n\t<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-size</span> <span class="token parameter variable">-2k</span> <span class="token parameter variable">-delete</span>\n<span class="token comment"># 与 exec结合</span>\n\t<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-user</span> root <span class="token parameter variable">-exec</span> <span class="token function">chown</span> ss <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span><span class="token punctuation">;</span>\n<span class="token comment"># -prune 跳过特定的目录</span>\n\t<span class="token function">find</span> /root <span class="token punctuation">\\</span><span class="token punctuation">(</span> <span class="token parameter variable">-name</span> <span class="token string">&quot;*.sh&quot;</span> <span class="token parameter variable">-prune</span> <span class="token punctuation">\\</span><span class="token punctuation">)</span> <span class="token parameter variable">-o</span> <span class="token punctuation">\\</span><span class="token punctuation">(</span> <span class="token parameter variable">-tyoe</span> <span class="token parameter variable">-f</span> -print<span class="token punctuation">\\</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p><img src="Shell%200e1a0c0f871c4cd39a449d2705b5e063/Untitled%201.png" alt="文件类型对照"></p><p>文件类型对照</p><p><strong>2.4玩转xargs</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 将多行转成单行输出</span>\n\t<span class="token function">cat</span> date.sh <span class="token operator">|</span> <span class="token function">xargs</span>\n<span class="token comment"># 按每行参数最大量</span>\n\t<span class="token function">cat</span> date.sh <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token parameter variable">-n</span> <span class="token number">3</span>\n<span class="token comment"># 定界符</span>\n<span class="token comment"># 以字符X作为（IFS）</span>\n\t<span class="token function">cat</span> date.sh <span class="token operator">|</span> xatgs <span class="token parameter variable">-d</span> X <span class="token parameter variable">-n</span> <span class="token number">2</span>\n<span class="token comment"># 统计.sh文件的总行数</span>\n\t<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-name</span> <span class="token string">&quot;*.sh&quot;</span> <span class="token parameter variable">-maxdepth</span> <span class="token number">1</span>  <span class="token parameter variable">-print0</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token parameter variable">-0</span> <span class="token function">wc</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>2.5tr命令</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 将所有的小写文字转为大写</span>\n\t<span class="token function">cat</span> date.sh <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">&#39;a-z&#39;</span> <span class="token string">&#39;A-Z&#39;</span>\n<span class="token comment"># 简易的数字加密和解密</span>\n\t<span class="token builtin class-name">echo</span> <span class="token number">12345</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">&#39;0-9&#39;</span> <span class="token string">&#39;987654321&#39;</span>\n\t<span class="token builtin class-name">echo</span> <span class="token number">87654</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">&#39;987654321&#39;</span> <span class="token string">&#39;0-9&#39;</span>\n<span class="token comment"># 删除指定字符-d</span>\n\t<span class="token function">cat</span> date.sh <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-d</span> <span class="token string">&#39;0-9&#39;</span>\n<span class="token comment"># 字符串补集</span>\n\t<span class="token function">cat</span> date.sh <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-d</span> <span class="token parameter variable">-c</span> <span class="token string">&#39;0-9 \\n&#39;</span>\n<span class="token comment"># 字符类</span>\n<span class="token comment"># alnum -- 字母和数字</span>\n<span class="token comment"># alpha -- 字母</span>\n<span class="token comment"># cntrl -- 控制（非打印）字符</span>\n<span class="token comment"># digit -- 数字</span>\n<span class="token comment"># graph -- 图形字符</span>\n<span class="token comment"># lower -- 小写字母</span>\n<span class="token comment"># print -- 可打印字符</span>\n<span class="token comment"># punct -- 标点符号</span>\n<span class="token comment"># space -- 空白字符</span>\n<span class="token comment"># upper -- 大写字母</span>\n<span class="token comment"># xdigit -- 十六进制字符</span>\n\t<span class="token function">cat</span> date.sh <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">&#39;[:lower:]&#39;</span> <span class="token string">&#39;[:lower:]&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>2.6 校验和核实</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 校验一个文件的完整性</span>\n<span class="token comment"># md5sum和sha1sum</span>\n\tmd5sum filename <span class="token operator">&gt;</span> filname.md5\n\tsha1sum filename <span class="token operator">&gt;</span> filename.sha1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>2.7排序、单一与重复</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># sort命令文件名排序</span>\n\t<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-type</span> f <span class="token parameter variable">-maxdepth</span> <span class="token number">1</span> <span class="token parameter variable">-name</span> <span class="token string">&#39;*.sh&#39;</span><span class="token operator">|</span><span class="token function">sort</span>\n<span class="token comment"># 按数字进行排序</span>\n  <span class="token function">sort</span> <span class="token parameter variable">-n</span>\n<span class="token comment"># 按逆序排序</span>\n\t<span class="token function">sort</span> <span class="token parameter variable">-r</span> \n<span class="token comment"># 按月份进行排序</span>\n\t<span class="token function">sort</span> <span class="token parameter variable">-M</span>\n<span class="token comment"># uniq命令消除重复的内容</span>\n  <span class="token function">uniq</span> filename\n\t<span class="token function">sort</span> <span class="token parameter variable">-u</span> filename\n  <span class="token function">sort</span> filename <span class="token operator">|</span> <span class="token function">uniq</span> <span class="token parameter variable">-u</span>\n<span class="token comment"># 统计各行出现的次数</span>\n  <span class="token function">sort</span> filename <span class="token operator">|</span> <span class="token function">uniq</span> <span class="token parameter variable">-c</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><strong>2.7分割文件和数据</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># -a指定分割的长度</span>\n\t<span class="token function">split</span> <span class="token parameter variable">-b</span> 10k filename <span class="token parameter variable">-d</span> <span class="token parameter variable">-a</span> <span class="token number">4</span>\n<span class="token comment"># -l 按行分割</span>\n\t<span class="token function">split</span> <span class="token parameter variable">-l</span> <span class="token number">10</span> filename\n<span class="token comment"># 根据扩展名切分文件名</span>\n\t<span class="token comment">#!/bin/bash</span>\n\t<span class="token assign-left variable">file</span><span class="token operator">=</span><span class="token string">&quot;sample.jpq&quot;</span>\n\t<span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token variable">${file<span class="token operator">%</span>.*}</span>\n\t<span class="token builtin class-name">echo</span> Filename: <span class="token variable">$name</span>\n<span class="token comment"># 贪婪模式获取符合条件的最长字符串</span>\n\t<span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token variable">${file<span class="token operator">%%</span>.*}</span>\n<span class="token comment"># 移除最左边的内容</span>\n\t<span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token variable">${file<span class="token operator">#</span>*.}</span>\n<span class="token comment"># 贪婪模式从左开始匹配到最右边*。移除</span>\n  <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token variable">${file<span class="token operator">##</span>*.}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><strong>2.8文件权限、所有权和沾滞位</strong></p><ul><li><ul><li>—— 普通文件</li></ul></li><li>d —— 目录</li><li>c —— 字符设备</li><li>b —— 块设备</li><li>I ——— 符号链接</li><li>s ——— 套接字</li><li>p ———- 管道</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># r 目录的读权限允许读取目录中的问及那和子目录的列表</span>\n<span class="token comment"># w 目录的写权限允许在目录中创建或删除文件或目录</span>\n<span class="token comment"># x 目录的执行权限 指明是否可以访问目录中的文件和子目录</span>\n<span class="token comment"># 读、写、执行权限都有与之对应的唯一八进制数</span>\n<span class="token comment"># r-- = 4</span>\n<span class="token comment"># -w- = 2</span>\n<span class="token comment"># --x = 1</span>\n<span class="token comment"># 权限序列：</span>\n<span class="token comment"># rwx = 4 + 2 + 1=7</span>\n<span class="token comment"># rw- = 4 + 2 =6</span>\n<span class="token comment"># r-- = 4</span>\n<span class="token comment"># u=制定用户权限 g=制定用户组权限 o=指定其他实体权限</span>\n\t <span class="token function">chmod</span> <span class="token assign-left variable">u</span><span class="token operator">=</span>rwx <span class="token assign-left variable">g</span><span class="token operator">=</span>rw <span class="token assign-left variable">o</span><span class="token operator">=</span>r filename\n<span class="token comment"># 当前目录递归设置所有权</span>\n\t<span class="token function">chown</span> <span class="token number">775</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-R</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><strong>2.9创建不可修改的文件</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 设置文件不可修改</span>\n\tchattr +i <span class="token function">file</span>\n<span class="token comment"># 取消不可修改</span>\n  chattr <span class="token parameter variable">-i</span> <span class="token function">file</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>3.0diff命令</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 获取两个文件的不同内容</span>\n\t<span class="token function">diff</span> filename1 filename2\n<span class="token comment"># 一体化输出</span>\n  <span class="token function">diff</span> <span class="token parameter variable">-u</span> filename1 filename2\n<span class="token comment"># patch 将一个修改应用于任何一个文件</span>\n<span class="token comment"># -N 将所有缺失的文件视为空文件</span>\n<span class="token comment"># -a 将所有的文件视为文本文件</span>\n<span class="token comment"># -u 生成一体化输出</span>\n<span class="token comment"># -r 遍历目录下的所有文件</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>3.1head命令</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 默认获取前十行</span>\n <span class="token function">cat</span> filename <span class="token operator">|</span> <span class="token function">head</span>\n<span class="token comment"># 指定行数 -n </span>\n <span class="token function">cat</span> filename <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-n</span> <span class="token number">10</span>\n<span class="token comment"># 出路N行之外的所有行</span>\n <span class="token function">cat</span> filename <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-n</span> <span class="token parameter variable">-10</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>3.1tail命令</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 默认取最后十行</span>\n\t<span class="token function">tail</span> filename\n<span class="token comment"># 打印最后五行</span>\n  <span class="token function">tail</span>  <span class="token parameter variable">-n</span> <span class="token number">5</span> filename\n<span class="token comment"># 打印出路前4行之外的所有的行</span>\n  <span class="token function">tail</span> <span class="token parameter variable">-n</span> +4\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>3.2ls命令</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 只列出当前路径下的目录</span>\n  <span class="token function">ls</span> <span class="token parameter variable">-d</span> */\n\t<span class="token function">ls</span> <span class="token parameter variable">-l</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;^d&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>3.3wc命令</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 统计行数</span>\n\t<span class="token function">wc</span> <span class="token parameter variable">-l</span> filename\n<span class="token comment"># 单词数</span>\n\t<span class="token function">wc</span> <span class="token parameter variable">-w</span> filename\n<span class="token comment"># 字符数</span>\n  <span class="token function">wc</span> <span class="token parameter variable">-c</span> filename\n<span class="token comment"># 默认打印行数 单词数 字符数</span>\n  <span class="token function">wc</span> filename\n<span class="token comment"># 打印最长行</span>\n  <span class="token function">wc</span> filename <span class="token parameter variable">-L</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><strong>3.4tree命令</strong></p><ul><li>-a 打印所有文件,包括隐藏文件、目录</li><li>-C 在文件和目录清单上加上色彩，便于区分文件类型</li><li>-d 仅列出目录名称，而非内容</li><li>-D 列出文件或目录更改时间</li><li>-L 目录树的最大显示深度</li><li>-p 打印结构同时打印文件权限</li><li>-l 跟随目录的符号链接，就像它们是目录一样。 避免了导致递归循环的链接</li><li>-f 打印每个文件的完整路径前缀</li><li>-F 在每个条目后加上文件类型的指示符(如目录是/)</li><li>-h 打印每个文件打大小</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>tree filename\n<span class="token comment"># 生成html输出</span>\n\ttree filename <span class="token parameter variable">-H</span> http://localhost <span class="token parameter variable">-o</span> out.html\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>3.5cut命令</strong></p><ul><li>b ：以字节为单位进行分割。这些字节位置将忽略多字节字符边界，除非也指定了 -n 标志。</li><li>c ：以字符为单位进行分割。</li><li>d ：自定义分隔符，默认为制表符。</li><li>f ：与-d一起使用，指定显示哪个区域。</li><li>n ：取消分割多字节字符。仅和 -b 标志一起使用。如果字符的最后一个字节落在由 -b 标志的 List 参数指示的范围之内，该字符将被写出；否则，该字符将被排除</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 提取第一个字段或列</span>\n\t<span class="token function">cut</span> <span class="token parameter variable">-f</span> FIELD_LIST filename\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>3.6awk命令</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># NR 表示记录数量，在执行过程中对应于当前的行号</span>\n<span class="token comment"># NF 表示字段数量，在执行过程中对应于当前行的字段数</span>\n<span class="token comment"># $0 这个变量包含执行过程中当前行的文本内容</span>\n<span class="token comment"># $1 这个变量包含第一个字段的文本内容</span>\n\t<span class="token function">cat</span> date.sh <span class="token operator">|</span>   <span class="token function">awk</span> <span class="token string">&#39;{print &quot;Line no: &quot;NR&quot;, No of fields: &quot; NF, &quot;$0=&quot;$0}&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>3.7paste命令</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 将每一个文件内容作为单独的一列进行拼接</span>\n\t<span class="token function">paste</span> file1 file2 file3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>3.8egrep命令</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 解析文本中的电子邮件地址和URL</span>\n\t<span class="token function">egrep</span> <span class="token parameter variable">-o</span> <span class="token string">&quot;http://[a-zA-Z0-9.] + \\.[a-zA-Z](2,3)&quot;</span> filename\n<span class="token comment"># 打印&quot;text&quot;之后的行</span>\n\t<span class="token function">grep</span> <span class="token parameter variable">-A</span> <span class="token number">3</span> <span class="token string">&quot;text&quot;</span> filename\n<span class="token comment"># 打印匹配行的极其前3行</span>\n\t<span class="token function">grep</span> <span class="token parameter variable">-B</span> <span class="token number">3</span> <span class="token string">&quot;text&quot;</span> filename\n<span class="token comment"># 打印匹配行前后2两行</span>\n\t<span class="token function">grep</span> <span class="token parameter variable">-C</span> <span class="token number">2</span> <span class="token string">&quot;text&quot;</span> filename\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>3.9用 awk实现head、tail、tac</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 读取文件前10行</span>\n <span class="token function">awk</span> <span class="token string">&#39;NR &lt;=10&#39;</span> filename\n<span class="token comment"># 打印后十行</span>\n\t<span class="token function">awk</span> <span class="token string">&#39;{ buffer[NR % 10] = $0; } END {for(i=1; i &lt;11; i++){print buffer[i%10]}}&#39;</span> filename\n<span class="token comment"># 逆序输出</span>\n\t<span class="token function">awk</span> <span class="token string">&#39;{buffer[NR] = $0;} END {for(i=NR; i&gt;0; i--) {print buffer[i]}}&#39;</span> date.sh\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>4.0wget命令</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># wget URL</span>\n\t<span class="token function">wget</span> http://aldd\n<span class="token comment"># 用 -t指定重试次数</span>\n\t<span class="token function">wget</span> <span class="token parameter variable">-t</span> <span class="token number">4</span> URL\n<span class="token comment"># -c 可下载之前被中断的文件</span>\n\t<span class="token function">wget</span> <span class="token parameter variable">-c</span> URL\n<span class="token comment"># --mirror下载网页的所有页面</span>\n\t<span class="token function">wget</span> <span class="token parameter variable">--mirror</span> URL\n<span class="token comment"># --user和 -- password访问提供认证信息</span>\n\t<span class="token function">wget</span> <span class="token parameter variable">--user</span> username <span class="token parameter variable">--password</span> pass URL\n<span class="token comment"># 限速下载</span>\n\t<span class="token function">wget</span> --limit-rate 30k URL\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>4.1curl命令</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># curl执行下载将数据输出到终端</span>\n\t<span class="token function">curl</span>　URL <span class="token parameter variable">--slient</span>\n<span class="token comment">#  -o 将写入文件</span>\n\t<span class="token function">curl</span> URL <span class="token parameter variable">--slient</span> <span class="token parameter variable">-o</span>\n<span class="token comment"># --progress显示进度条</span>\n\t<span class="token function">curl</span> URL <span class="token parameter variable">--progress</span> \n<span class="token comment"># -C断点续传</span>\n\t<span class="token function">curl</span> <span class="token parameter variable">-C</span> <span class="token parameter variable">-URL</span>\n<span class="token comment"># 设置cookies</span>\n\t<span class="token function">curl</span> URL --cookie-agent <span class="token string">&quot;&quot;</span>\n<span class="token comment"># 设置用户代理</span>\n\t<span class="token function">curl</span> URL --uset-agent <span class="token string">&quot;&quot;</span>\n<span class="token comment"># -H设置头部信息</span>\n\t<span class="token function">curl</span> URL <span class="token parameter variable">-H</span> <span class="token string">&quot;&quot;</span>\n<span class="token comment"># --max--filesize 指定可下载文件的最大大小</span>\n\t<span class="token function">curl</span> URL --max-filesize bytes\n<span class="token comment"># 发送post请求-data 请求参数 也可缩写 -d</span>\n\t<span class="token function">curl</span> URL <span class="token parameter variable">-d</span> <span class="token string">&quot;host=host&amp;user=ss&quot;</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><strong>4.2tar命令</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># -c创建文件 -f 指定文件名</span>\n\t<span class="token function">tar</span> <span class="token parameter variable">-cf</span> output.tar file1 file2\n<span class="token comment"># -r向已归档的文件中添加内容</span>\n\t<span class="token function">tar</span> <span class="token parameter variable">-rvf</span> output.tar file1\n<span class="token comment"># -tf 列出归档文件中的内容</span>\n\t<span class="token function">tar</span> <span class="token parameter variable">-tf</span> output.tar\n<span class="token comment"># -v 列出文件的更多信心</span>\n\t<span class="token function">tar</span> <span class="token parameter variable">-tvvf</span> output.tar\n<span class="token comment">#  -xf 提取文件中的内容到当前目录</span>\n\t<span class="token function">tar</span> <span class="token parameter variable">-xf</span> output.tar\n<span class="token comment"># -C 指定文件</span>\n\t<span class="token function">tar</span> <span class="token parameter variable">-xf</span> <span class="token parameter variable">-output.tar</span> <span class="token parameter variable">-C</span> /root/\n<span class="token comment"># 提取指定的内容</span>\n\t<span class="token function">tar</span> <span class="token parameter variable">-xvf</span> output.tar file1 file2\n<span class="token comment"># -A合并多个tar文件</span>\n\t<span class="token function">tar</span> <span class="token parameter variable">-Af</span> file1.tar file2.tar\n<span class="token comment"># -delete从文件中删除内容</span>\n\t<span class="token function">tar</span> <span class="token parameter variable">-f</span> output.tar <span class="token parameter variable">--delete</span> file1 file2\n<span class="token comment"># -j指定压缩格式为bunzip2</span>\n<span class="token comment"># -z指定gzip格式</span>\n<span class="token comment"># --lzma指定lzma格式</span>\n<span class="token comment"># exclude排除指定文件</span>\n\t<span class="token function">tar</span> <span class="token parameter variable">-cf</span> output.tar * <span class="token parameter variable">--exlude</span> <span class="token string">&quot;*.txt&quot;</span>\n<span class="token comment"># -totals打印总规党字节数</span>\n\t<span class="token function">tar</span> <span class="token parameter variable">-czvvf</span> output.tar.gz file1 file2\n<span class="token comment"># zcat 直接读取压缩文件中的内容</span>\n\tzcat output.tar\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p><strong>4.3lzma命令</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Lzma filename\n<span class="token comment"># 解压.lzma文件会删除源文件</span>\n\tunlzma filename\n<span class="token comment"># -k保留源文件</span>\n\tlzma filename <span class="token parameter variable">-k</span>\n<span class="token comment"># 可指定压缩率</span>\n\tlzma <span class="token parameter variable">-9</span> filename\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>4.4zip压缩与归档</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">zip</span> output.zip file1 file2\n<span class="token comment"># 解压文件</span>\n\t<span class="token function">unzip</span> output.zip\n<span class="token comment"># -d删除压缩文件中指定的文件</span>\n\t<span class="token function">unzip</span> <span class="token parameter variable">-d</span> output.zip file1\n<span class="token comment"># -l列出压缩文件的文件</span>\n\t<span class="token function">unzip</span> <span class="token parameter variable">-l</span> output.zip\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>4.5加密工具与散列</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>crypt filename\n<span class="token comment"># 解密</span>\n\tcrypt PASSWORD  <span class="token parameter variable">-d</span> filename <span class="token operator">&gt;</span> outputfilename\n<span class="token comment"># gpg</span>\n\tgpg <span class="token parameter variable">-c</span> filename\n<span class="token comment"># 解密</span>\n\tgpg filename\n<span class="token comment"># base64</span>\n\tbase64filename <span class="token operator">&gt;</span> outputfilename\n<span class="token comment"># 解码</span>\n\tbase64 <span class="token parameter variable">-d</span> filename <span class="token operator">&gt;</span> outputfilename\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>4.6统计磁盘使用情况</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># du 和 df</span>\n<span class="token comment"># 递归地输出指定目录的所有文件的统计结果</span>\n\t<span class="token function">du</span> <span class="token parameter variable">-a</span> <span class="token function">dir</span>\n<span class="token comment"># -h 带单位的输出</span>\n\t<span class="token function">du</span> <span class="token parameter variable">-h</span> <span class="token function">dir</span>\n<span class="token comment"># -c统计该目录总文件大小</span>\n\t<span class="token function">du</span> <span class="token parameter variable">-h</span> <span class="token parameter variable">-c</span> <span class="token function">dir</span>\n<span class="token comment"># -sh打印一行</span>\n\t<span class="token function">du</span> <span class="token parameter variable">-sh</span> <span class="token function">dir</span>\n<span class="token comment"># -b 比特大小</span>\n<span class="token comment"># -k KB单位</span>\n<span class="token comment"># -m MB</span>\n<span class="token comment"># -B</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><strong>4.7计算执行时间</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">time</span> <span class="token function">ls</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>4.8ps命令</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># pcpu表示CPU占用率</span>\n<span class="token function">ps</span> <span class="token parameter variable">-eo</span> comm,pcpu <span class="token operator">|</span> <span class="token function">head</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="Shell%200e1a0c0f871c4cd39a449d2705b5e063/Untitled%202.png" alt="Untitled"></p><p><strong>4.9wall命令</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>wall向当前登录用户发送广播消息\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>5.0uname命令</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 打印当前系统的主机名</span>\n\t<span class="token function">uname</span> <span class="token parameter variable">-n</span>\n<span class="token comment"># -a打印内核版本、硬件架构等</span>\n\t<span class="token function">uname</span> <span class="token parameter variable">-a</span>\n<span class="token comment"># -r打印内核发型版本</span>\n\t<span class="token function">uname</span> <span class="token parameter variable">-r</span>\n<span class="token comment"># -m打印CPU的相关信息</span>\n\t<span class="token function">uname</span> <span class="token parameter variable">-m</span>\n<span class="token comment"># 打印cpu的相关信息</span>\n\t<span class="token function">cat</span> /proc/cpuinfo\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>',110),p={},l=(0,a(3744).Z)(p,[["render",function(n,s){return e}]])}}]);